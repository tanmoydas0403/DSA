92. Reverse Linked List II:

Given the head of a singly linked list and two integers left and right where
left <= right, reverse the reverse of the list from position left to
position right, and return the reverse list.


class Solution{
    public ListNode reverseBetween(ListNode head, int left, int right){
        if(left == right){
            return head;
        }

        ListNode current = head;
        ListNode prev = null;

        for( int i = 0; current != null && i < left -1; i++){
            prev = current;
            current = current.next;
        }

        ListNode last = prev;
        ListNode newEnd = current;

        //reverse between left and right
        ListNode next = current.next;
        for(int i = 0; current !== null && i < right - left + 1; i++){
            current.next = prev;
            prev = current;
            current = next;
            if(next != null){
                next = next.next;
            }
        }

        if(last != null){
            last.next = prev;
        } else {
            head = prev;
        }

        newEnd.next = current;
        return head;
    }
}